[
  {
    "objectID": "danl_proj_nba.html#salary-distribution-among-teams",
    "href": "danl_proj_nba.html#salary-distribution-among-teams",
    "title": "Data Analysis Project",
    "section": "Salary Distribution Among Teams",
    "text": "Salary Distribution Among Teams\nLet’s start with the salary distribution among teams using seaborn for visualization. ​​\n\n\n# Handle missing values in 'Salary' by replacing them with the median salary\nmedian_salary = nba['Salary'].median()\nnba['Salary'].fillna(median_salary, inplace=True)\n\n/var/folders/_m/d6jf0jhd2zzdfd5kzdhl_24w0000gn/T/ipykernel_79892/1671011424.py:3: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  nba['Salary'].fillna(median_salary, inplace=True)\n\n\n\n# Set the aesthetic style of the plots\nsns.set_style(\"whitegrid\")\n\n# Calculate total salary by team\nteam_salary = (\n    nba\n    .groupby('Team')['Salary']\n    .sum()\n    .reset_index()\n    .sort_values(by='Salary', ascending=False)\n)\n\n# Plot total salary by team\nplt.figure(figsize=(10, 16))\nsns.barplot(data = team_salary,\n            x = 'Salary', y = 'Team',\n            palette = 'coolwarm')\nplt.title('Total Salary Distribution Among NBA Teams')\nplt.xlabel('Total Salary')\nplt.ylabel('Team')\nplt.xticks(rotation=45)\nplt.show()\n\n\n\n\n\n\n\n\nThe visualization above displays the total salary distribution among NBA teams, with teams sorted by their total salary expenditure. This bar plot reveals which teams are the biggest spenders on player salaries and which are more conservative. The color gradient provides a visual cue to easily distinguish between the higher and lower spending teams.\nNotice that Portland Trail Blazers has the highest total salary followed by Golden State Warriors and Philadelphia 76ers, and Memphis Grizzlies has the lowest total salary."
  },
  {
    "objectID": "danl_proj_nba.html#player-age-distribution",
    "href": "danl_proj_nba.html#player-age-distribution",
    "title": "Data Analysis Project",
    "section": "Player Age Distribution",
    "text": "Player Age Distribution\nNext, let’s explore the Player Age Distribution across the NBA. We’ll create a histogram to visualize how player ages are distributed, which will help us understand if the league trends younger, older, or has a balanced age mix. ​​\n\n# Convert 'Birthday' column to datetime format\nfrom dateutil import parser\n# nba['Birthday'] = nba['Birthday'].apply(lambda x: parser.parse(x))\n\n# Now, let's calculate the age of each player\n# nba['Age'] = (datetime.now() - nba['Birthday']).dt.days // 365\n\n# Plot the age distribution of NBA players\nplt.figure(figsize=(10, 6))\nsns.histplot(nba['Age'],\n             bins = 15,\n             kde = True,\n             color = 'skyblue')\nplt.title('Age Distribution of NBA Players')\nplt.xlabel('Age')\nplt.ylabel('Count')\nplt.show()\n\n\n/Users/bchoe/anaconda3/lib/python3.11/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n\n\n\n\n\n\n\n\n\nThe histogram above shows the age distribution of NBA players, with a kernel density estimate (KDE) overlay to indicate the distribution shape. The plot helps identify the common ages for NBA players and whether there are significant numbers of very young or older players.\nNotice that the majority of players fall within an age range from 24 to 34. There are few players whose age is above 40."
  },
  {
    "objectID": "danl_proj_nba.html#position-wise-salary-insights",
    "href": "danl_proj_nba.html#position-wise-salary-insights",
    "title": "Data Analysis Project",
    "section": "Position-wise Salary Insights",
    "text": "Position-wise Salary Insights\nMoving on to Position-wise Salary Insights, we’ll examine how average salaries differ across player positions. This analysis could reveal which positions are typically higher-paid, potentially reflecting their value on the basketball court. Let’s create a box plot to visualize the salary distribution for each position. ​​\n\n# Plot salary distribution by player position\nplt.figure(figsize=(10, 6))\nsns.boxplot(data = nba,\n            x = 'Position', y = 'Salary',\n            palette = 'Set2')\nplt.title('Salary Distribution by Position')\nplt.xlabel('Position')\nplt.ylabel('Salary')\nplt.show()\n\n\n\n\n\n\n\n\nThe box plot above illustrates the salary distribution by player position, showcasing the variation in salaries among different positions within the NBA. PG-SG has the highest median salary."
  },
  {
    "objectID": "danl_proj_nba.html#top-10-highest-paid-players",
    "href": "danl_proj_nba.html#top-10-highest-paid-players",
    "title": "Data Analysis Project",
    "section": "Top 10 Highest Paid Players",
    "text": "Top 10 Highest Paid Players\nLastly, we’ll identify the Top 10 Highest Paid Players in the NBA. Let’s visualize this information.\n\n# Identify the top 10 highest paid players\ntop_10_salaries = nba.sort_values(by='Salary', ascending=False).head(10)\n\n# Plot the top 10 highest paid players\nplt.figure(figsize=(12, 8))\nsns.barplot(data = top_10_salaries,\n            x = 'Salary', y = 'PlayerName',\n            palette = 'viridis')\nplt.title('Top 10 Highest Paid NBA Players')\nplt.xlabel('Salary')\nplt.ylabel('Player')\nplt.show()\n\n\n\n\n\n\n\n\nThe bar plot above reveals the top 10 highest-paid NBA players, showcasing those who stand at the pinnacle of the league in terms of salary. This visualization not only highlights the star players who command the highest salaries but also may reflect their marketability, performance, and contribution to their respective teams."
  },
  {
    "objectID": "gas_prices_map.html",
    "href": "gas_prices_map.html",
    "title": "Final Project",
    "section": "",
    "text": "library(readxl)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\nlibrary(usmap)\nlibrary(ggplot2)\nlibrary(gganimate)\nlibrary(knitr)\nlibrary(readr)\nlibrary(scales)\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(tigris)\n\nTo enable caching of data, set `options(tigris_use_cache = TRUE)`\nin your R script or .Rprofile.\n\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(stringr)\n\nPer state gasoline\n\ngas_data &lt;- read_excel(\"pswrgvwall.xls\", sheet = 4, skip = 2)\ncolnames(gas_data)[1] &lt;- \"date\"\n\nregion_states &lt;- list(\n  \"Weekly New England (PADD 1A) Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\" = c(\"CT\", \"ME\", \"MA\", \"NH\", \"RI\", \"VT\"),\n  \"Weekly Central Atlantic (PADD 1B) Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\" = c(\"DE\", \"DC\", \"MD\", \"NJ\", \"NY\", \"PA\"),\n  \"Weekly Lower Atlantic (PADD 1C) Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\" = c(\"FL\", \"GA\", \"NC\", \"SC\", \"VA\", \"WV\"),\n  \"Weekly Midwest Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\" = c(\"IL\", \"IN\", \"IA\", \"KS\", \"MI\", \"MN\", \"MO\", \"NE\", \"ND\", \"OH\", \"SD\", \"WI\"),\n  \"Weekly Gulf Coast Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\" = c(\"AL\", \"AR\", \"KY\", \"LA\", \"MS\", \"NM\", \"OK\", \"TN\", \"TX\"),\n  \"Weekly Rocky Mountain Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\" = c(\"CO\", \"ID\", \"MT\", \"UT\", \"WY\"),\n  \"Weekly West Coast Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\" = c(\"AK\", \"AZ\", \"CA\", \"HI\", \"NV\", \"OR\", \"WA\")\n)\n\ngas_long &lt;- gas_data %&gt;%\n  select(date, all_of(names(region_states))) %&gt;%\n  pivot_longer(-date, names_to = \"region_label\", values_to = \"price\") %&gt;%\n  filter(!is.na(price)) %&gt;%\n  mutate(date = as.Date(date))\n\ngas_state_prices &lt;- gas_long %&gt;%\n  rowwise() %&gt;%\n  mutate(state = list(region_states[[region_label]])) %&gt;%\n  unnest(state)\n\ngas_state_prices$date &lt;- as.Date(gas_state_prices$date)\n\ncustom_data &lt;- read.csv(\"nine_states_data.csv\")\ncustom_data$date &lt;- as.Date(custom_data$date)\n\ncustom_data &lt;- custom_data %&gt;% filter(date &gt;= as.Date(\"2021-08-02\") & date &lt;= as.Date(\"2022-08-29\"))\n\nexcluded_states &lt;- c(\"NY\", \"CO\", \"FL\", \"MA\", \"MN\", \"OH\", \"TX\", \"WA\", \"CA\")\nregion_filtered &lt;- gas_state_prices %&gt;% filter(!state %in% excluded_states)\ncombined_data &lt;- bind_rows(region_filtered, custom_data)\n\nweekly_dates &lt;- seq(as.Date(\"2021-08-02\"), as.Date(\"2022-08-29\"), by = \"1 week\")\ncombined_data &lt;- combined_data %&gt;% filter(date %in% weekly_dates)\n\nall_states &lt;- unique(combined_data$state)\nall_weeks &lt;- data.frame(date = rep(weekly_dates, each = length(all_states)), state = rep(all_states, times = length(weekly_dates)))\ncombined_data &lt;- left_join(all_weeks, combined_data, by = c(\"date\", \"state\"))\n\np_map &lt;- plot_usmap(data = combined_data, values = \"price\", regions = \"states\") +\n  scale_fill_continuous(name = \"Gas Price ($)\", low = \"yellow\", high = \"red\", na.value = \"grey90\") +\n  labs(\n    title = \"U.S. Gas Prices by State\",\n    subtitle = \"{frame_time}\",\n    fill = \"Price ($)\",\n    caption = \"Source: U.S. Energy Information Administration (EIA), https://www.eia.gov\"\n  ) +\n  theme(legend.position = \"right\", plot.caption = element_text(size = 8, hjust = 1)) +\n  transition_time(date) +\n  ease_aes(\"linear\")\n\na &lt;- animate(p_map, fps = 10, width = 1000, height = 600, renderer = gifski_renderer())\na\nanim_save(\"/Users/teddypackert/Desktop/DANL 310/Final Project/us_gas_prices.gif\", animation = a)\n\n\nknitr::include_graphics(\"us_gas_prices.gif\")\n\n\n\n\n\n\n\n\nRegional Gasoline\n\ngas_data &lt;- read_excel(\"pswrgvwall.xls\", sheet = 4, skip = 2)\ncolnames(gas_data)[1] &lt;- \"date\"\n\nregion_columns &lt;- c(\n  \"Weekly New England (PADD 1A) Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\",\n  \"Weekly Central Atlantic (PADD 1B) Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\",\n  \"Weekly Lower Atlantic (PADD 1C) Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\",\n  \"Weekly Midwest Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\",\n  \"Weekly Gulf Coast Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\",\n  \"Weekly Rocky Mountain Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\",\n  \"Weekly West Coast Regular All Formulations Retail Gasoline Prices  (Dollars per Gallon)\"\n)\n\ngas_long &lt;- gas_data %&gt;%\n  select(date, all_of(region_columns)) %&gt;%\n  pivot_longer(-date, names_to = \"region\", values_to = \"price\") %&gt;%\n  filter(!is.na(price)) %&gt;%\n  mutate(\n    date = as.Date(date),\n    region = gsub(\"Weekly |Regular.*|\\\\(.*\\\\)\", \"\", region),  # clean names\n    region = trimws(region)\n  )\n\ngas_long_filtered &lt;- gas_long %&gt;%\n  filter(date &gt;= as.Date(\"2015-01-01\") & date &lt;= as.Date(\"2025-01-01\"))\n\nplot &lt;- ggplot(gas_long_filtered, aes(x = date, y = price, color = region)) +\n  geom_line(size = 0.9) +\n  geom_vline(xintercept = as.Date(\"2022-02-24\"), linetype = \"dashed\", color = \"black\") +\n  annotate(\"text\", \n           x = as.Date(\"2022-02-24\") - 580,\n           y = 5.8,\n           label = \"Feb 24, 2022\\nInvasion Begins\", \n           hjust = 0, vjust = 1, size = 3.5) +\n  scale_y_continuous(\n    labels = dollar_format(),\n    breaks = seq(1, 6.5, by = 0.5)\n  ) +\n  labs(\n    title = \"U.S. Regional Gasoline Prices (2015–2025)\",\n    x = \"Date\",\n    y = \"Price (USD per Gallon)\",\n    color = \"Region\",\n    caption = \"Source: U.S. Energy Information Administration (EIA)\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nplot\n\n\n\n\n\n\n\n# ggsave(\"regional_gas_prices.png\", plot = plot, width = 12, height = 7, dpi = 300)\n\nWheat and Corn\n\nwheat &lt;- read_csv(\"PWHEAMTUSDM.csv\") %&gt;%\n  mutate(Year = year(as.Date(observation_date))) %&gt;%\n  group_by(Year) %&gt;%\n  summarize(Wheat = mean(PWHEAMTUSDM, na.rm = TRUE))\n\nRows: 423 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl  (1): PWHEAMTUSDM\ndate (1): observation_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nmaize &lt;- read_csv(\"PMAIZMTUSDM.csv\") %&gt;%\n  mutate(Year = year(as.Date(observation_date))) %&gt;%\n  group_by(Year) %&gt;%\n  summarize(Maize = mean(PMAIZMTUSDM, na.rm = TRUE))\n\nRows: 423 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl  (1): PMAIZMTUSDM\ndate (1): observation_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nag_prices &lt;- full_join(wheat, maize, by = \"Year\") %&gt;%\n  filter(Year &gt;= 2015, Year &lt;= 2025) %&gt;%\n  pivot_longer(cols = -Year, names_to = \"Item\", values_to = \"Price\")\n\np &lt;- ggplot(ag_prices, aes(x = Year, y = Price, color = Item)) +\n  geom_line(linewidth = 1) +\n  geom_vline(xintercept = 2022, linetype = \"dashed\", color = \"black\") +\n  annotate(\"text\",\n           x = 2022.3,\n           y = max(ag_prices$Price, na.rm = TRUE) * 0.95,\n           label = \"Feb 24, 2022\\nInvasion Begins\",\n           hjust = 0, size = 3.5) +\n  scale_x_continuous(breaks = 2015:2025) +\n  scale_y_continuous(labels = dollar_format()) +\n  labs(\n    title = \"Global Wheat and Maize Prices (2015–2025)\",\n    x = \"Year\",\n    y = \"Average Price (USD per Metric Ton)\",\n    color = \"Commodity\",\n    caption = \"Source: FRED (Federal Reserve Bank of St. Louis), IMF Primary Commodity Prices\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 9),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n# ggsave(\"wheat_maize_agstyle.png\", p, width = 10, height = 6, dpi = 300)\np\n\n\n\n\n\n\n\n\nGrocery Prices\n\nag_data &lt;- read_csv(\"ag_prices_named_final.csv\")\n\nRows: 11 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): Year, Eggs, Flour, Ground Beef, Lettuce, Milk, Oranges, Pasta, Pot...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nag_long &lt;- ag_data %&gt;%\n  pivot_longer(cols = -Year, names_to = \"Item\", values_to = \"Price\")\n\nitems_over_2 &lt;- ag_long %&gt;%\n  group_by(Item) %&gt;%\n  filter(max(Price, na.rm = TRUE) &gt; 2) %&gt;%\n  ungroup()\n\np &lt;- ggplot(items_over_2, aes(x = Year, y = Price, color = Item)) +\n  geom_line(linewidth = 1) +\n  geom_vline(xintercept = 2022, linetype = \"dashed\", color = \"black\") +\n  annotate(\"text\",\n           x = 2022.3,\n           y = max(items_over_2$Price, na.rm = TRUE) * 0.95,\n           label = \"Feb 24, 2022\\nInvasion Begins\",\n           hjust = 0, size = 3.5) +\n  scale_x_continuous(breaks = 2015:2025) +\n  scale_y_continuous(labels = dollar_format()) +\n  labs(\n    title = \"U.S. Agricultural Prices by Item (2015–2025)\",\n    x = \"Year\",\n    y = \"Average Price (USD)\",\n    color = \"Item\",\n    caption = \"Source: U.S. Bureau of Labor Statistics\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 9),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n\n\n# ggsave(\"ag_prices_over2.png\", p, width = 10, height = 6, dpi = 300)\np\n\n\n\n\n\n\n\n\nnatural gas\n\nnatgas &lt;- read_csv(\"PNGASEUUSDM.csv\")\n\nRows: 423 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl  (1): PNGASEUUSDM\ndate (1): observation_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nnatgas &lt;- natgas %&gt;%\n  rename(date = observation_date) %&gt;%\n  mutate(date = as.Date(date)) %&gt;%\n  filter(date &gt;= as.Date(\"2015-01-01\") & date &lt;= as.Date(\"2025-01-01\"))\n\nggplot(natgas, aes(x = date, y = PNGASEUUSDM)) +\n  geom_line(color = \"darkorange\", size = 1) +\n  geom_vline(xintercept = as.Date(\"2022-02-24\"), linetype = \"dashed\", color = \"black\") +\n  annotate(\"text\", x = as.Date(\"2021-12-01\"), y = max(natgas$PNGASEUUSDM, na.rm = TRUE) * 0.95,\n           label = \"Feb 24, 2022\\nInvasion Begins\", size = 3.5, hjust = 0) +\n  scale_y_continuous(labels = dollar_format(prefix = \"$\")) +\n  labs(\n    title = \"Natural Gas Prices (2015–2025)\",\n    x = \"Date\",\n    y = \"Price (USD per Million BTU)\",\n    caption = \"Source: U.S. Energy Information Administration (EIA)\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n# ggsave(\"natural_gas_prices_2015_2025.png\", width = 10, height = 6)\n\ncrude oil\n\noil &lt;- read_csv(\"POILBREUSDM.csv\")\n\nRows: 423 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl  (1): POILBREUSDM\ndate (1): observation_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\noil &lt;- oil %&gt;%\n  rename(date = observation_date, price = POILBREUSDM) %&gt;%\n  mutate(date = as.Date(date)) %&gt;%\n  filter(date &gt;= as.Date(\"2015-01-01\") & date &lt;= as.Date(\"2025-01-01\"))\n\nl &lt;- ggplot(oil, aes(x = date, y = price)) +\n  geom_line(color = \"darkgreen\", size = 1) +\n  geom_vline(xintercept = as.Date(\"2022-02-24\"), linetype = \"dashed\", color = \"black\") +\n  annotate(\"text\", x = as.Date(\"2022-02-24\") + 150, y = max(oil$price, na.rm = TRUE) - 5,\n           label = \"Feb 24, 2022\\nInvasion Begins\", hjust = 0, size = 3.5, color = \"black\") +\n  scale_y_continuous(labels = dollar_format(prefix = \"$\")) +\n  labs(\n    title = \"Brent Crude Oil Prices (2015–2025)\",\n    x = \"Date\",\n    y = \"Price (USD per Barrel)\",\n    caption = \"Source: U.S. Energy Information Administration (EIA)\"\n  ) +\n  theme_minimal()\nl\n\n\n\n\n\n\n\n# ggsave(\"brent_crude_prices.png\", width = 10, height = 6, dpi = 300)\n\nPresidential Elections\n\noptions(tigris_use_cache = TRUE)\n\ncounties &lt;- counties(cb = TRUE, year = 2018) %&gt;%\n  filter(!STATEFP %in% c(\"02\", \"15\", \"72\")) %&gt;%  # exclude AK, HI, PR\n  mutate(fips = GEOID)\n\ndata_2020 &lt;- read_csv(\"2020_US_County_Level_Presidential_Results.csv\") %&gt;%\n  mutate(\n    county_fips = as.character(county_fips),\n    fips = str_pad(county_fips, 5, pad = \"0\"),\n    margin_2020 = per_dem - per_gop\n  ) %&gt;%\n  select(fips, margin_2020)\n\nRows: 3152 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): state_name, county_fips, county_name\ndbl (7): votes_gop, votes_dem, total_votes, diff, per_gop, per_dem, per_poin...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata_2024 &lt;- read_csv(\"2024_US_County_Level_Presidential_Results.csv\") %&gt;%\n  mutate(\n    county_fips = as.character(county_fips),\n    fips = str_pad(county_fips, 5, pad = \"0\"),\n    margin_2024 = per_dem - per_gop\n  ) %&gt;%\n  select(fips, margin_2024)\n\nRows: 3160 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): state_name, county_fips, county_name\ndbl (7): votes_gop, votes_dem, total_votes, diff, per_gop, per_dem, per_poin...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndata_2024 &lt;- data_2024 %&gt;% filter(!str_starts(fips, \"091\"))\n\nct_patch_2024 &lt;- tibble(\n  fips = c(\"09001\", \"09003\", \"09005\", \"09007\", \"09009\", \"09011\", \"09013\", \"09015\"),\n  margin_2024 = c(0.23, 0.22, 0.04, 0.13, 0.20, 0.12, 0.01, -0.02)\n)\n\ndata_2024 &lt;- bind_rows(data_2024, ct_patch_2024)\n\njoined &lt;- full_join(data_2020, data_2024, by = \"fips\") %&gt;%\n  mutate(margin_shift = margin_2024 - margin_2020)\n\nmap_2020 &lt;- left_join(counties, data_2020, by = \"fips\")\nmap_2024 &lt;- left_join(counties, data_2024, by = \"fips\")\nmap_shift &lt;- left_join(counties, joined, by = \"fips\")\n\nzoom_window &lt;- coord_sf(xlim = c(-125, -66), ylim = c(24, 50))\nlim &lt;- c(-1, 1)\n\np1 &lt;- ggplot(map_2020) +\n  geom_sf(aes(fill = margin_2020), color = NA) +\n  scale_fill_gradient2(low = \"red\", mid = \"white\", high = \"blue\",\n                       midpoint = 0, limits = lim, name = \"Dem Margin\") +\n  labs(title = \"2020 Election Result\") +\n  zoom_window +\n  theme_void()\np1\n\n\n\n\n\n\n\n# ggsave(\"margin_2020_map.png\", plot = p1, width = 12, height = 8, dpi = 300)\n\np2 &lt;- ggplot(map_2024) +\n  geom_sf(aes(fill = margin_2024), color = NA) +\n  scale_fill_gradient2(low = \"red\", mid = \"white\", high = \"blue\",\n                       midpoint = 0, limits = lim, name = \"Dem Margin\") +\n  labs(title = \"2024 Election Result\") +\n  zoom_window +\n  theme_void()\np2\n\n\n\n\n\n\n\n# ggsave(\"margin_2024_map.png\", plot = p2, width = 12, height = 8, dpi = 300)\n\np3 &lt;- ggplot(map_shift) +\n  geom_sf(aes(fill = margin_shift), color = NA) +\n  scale_fill_gradient2(low = \"red\", mid = \"white\", high = \"blue\",\n                       midpoint = 0, name = \"Shift in Margin\") +\n  labs(title = \"Difference Between 2020 vs 2024\") +\n  zoom_window +\n  theme_void()\np3\n\n\n\n\n\n\n\n# ggsave(\"margin_shift_map.png\", plot = p3, width = 12, height = 8, dpi = 300)\n\nnew york election shift\n\nny_counties &lt;- counties %&gt;%\n  filter(STATEFP == \"36\") %&gt;%\n  mutate(fips = GEOID)\n\nny_data_2020 &lt;- data_2020 %&gt;%\n  filter(str_starts(fips, \"36\"))\n\nny_data_2024 &lt;- data_2024 %&gt;%\n  filter(str_starts(fips, \"36\"))\n\nny_joined &lt;- full_join(ny_data_2020, ny_data_2024, by = \"fips\") %&gt;%\n  mutate(margin_shift = margin_2024 - margin_2020)\n\nny_map_shift &lt;- left_join(ny_counties, ny_joined, by = \"fips\")\n\np_ny &lt;- ggplot(ny_map_shift) +\n  geom_sf(aes(fill = margin_shift), color = \"white\", size = 0.2) +\n  scale_fill_gradient2(low = \"red\", mid = \"white\", high = \"blue\",\n                       midpoint = 0, name = \"Shift in Margin\") +\n  labs(title = \"Shift in Voting Margin: 2020 vs 2024 New York State\") +\n  theme_void()\np_ny\n\n\n\n\n\n\n\n# ggsave(\"ny_margin_shift_map.png\", plot = p_ny, width = 10, height = 8, dpi = 300)\n\ninflation\n\ninflation &lt;- read_csv(\"MEDCPIM158SFRBCLE.csv\")\n\nRows: 121 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl  (1): MEDCPIM158SFRBCLE\ndate (1): observation_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ninflation &lt;- inflation %&gt;%\n  rename(date = observation_date, inflation_rate = MEDCPIM158SFRBCLE) %&gt;%\n  mutate(date = as.Date(date)) %&gt;%\n  filter(date &gt;= as.Date(\"2015-01-01\") & date &lt;= as.Date(\"2025-01-01\"))\n\ninflation_plot &lt;- ggplot(inflation, aes(x = date, y = inflation_rate)) +\n  geom_line(color = \"steelblue\", size = 1.1) +\n  geom_vline(xintercept = as.Date(\"2022-02-24\"), linetype = \"dashed\", color = \"black\") +\n  annotate(\"text\",\n           x = as.Date(\"2022-02-24\") - 850,\n           y = max(inflation$inflation_rate, na.rm = TRUE) - 1,\n           label = \"Feb 24, 2022\\nInvasion Begins\", color = \"black\", size = 3.5, hjust = 0) +\n  scale_y_continuous(labels = percent_format(scale = 1)) +\n  labs(\n    title = \"U.S. Annual Inflation Rate (2015–2025)\",\n    x = \"Date\",\n    y = \"Inflation Rate (%)\",\n    caption = \"Source: World Bank\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\ninflation_plot\n\n\n\n\n\n\n\n# ggsave(\"us_inflation_rate.png\", width = 10, height = 6, dpi = 300)\n\napproval rates for biden\n\ndf &lt;- read_csv(\"APNORC_feb2023_PUF.csv\", locale = locale(encoding = \"latin1\"))\n\nRows: 1247 Columns: 103\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (101): SURV_MODE, SURV_LANG, CUR1, CUR3AB, CURY2A, CURY2B, CURY2C, CURY2...\ndbl   (2): SU_ID, FINALWT\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndf_long &lt;- df %&gt;%\n  select(\n    economy = CURY2A,\n    foreign_policy = CURY2B,\n    immigration = CURY2C\n  ) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"issue\", values_to = \"response\") %&gt;%\n  mutate(\n    response = str_remove(response, \"^\\\\(\\\\d+\\\\)\\\\s*\")\n  ) %&gt;%\n  drop_na()\n\ndf_percent &lt;- df_long %&gt;%\n  count(issue, response) %&gt;%\n  group_by(issue) %&gt;%\n  mutate(percent = 100 * n / sum(n))\n\nlabel_map &lt;- c(\n  \"Strongly approve\" = \"Strongly approve\",\n  \"Somewhat approve\" = \"Somewhat approve\",\n  \"Somewhat disapprove\" = \"Somewhat disapprove\",\n  \"Strongly disapprove\" = \"Strongly disapprove\",\n  \"DON'T KNOW/SKIPPED ON WEB/REFUSED (VOL)\" = \"N/A\"\n)\n\nggplot(df_percent, aes(x = response, y = percent, fill = response)) +\n  geom_col(show.legend = FALSE) +\n  facet_wrap(~ issue, scales = \"free_x\", labeller = as_labeller(c(\n    economy = \"The Economy\",\n    foreign_policy = \"Foreign Policy\",\n    immigration = \"Immigration\"\n  ))) +\n  scale_y_continuous(labels = scales::percent_format(scale = 1)) +\n  scale_x_discrete(labels = label_map) +\n  labs(\n    title = \"President Biden's Approval Ratings by Issue (Feb 2023)\",\n    y = \"Percentage\",\n    x = NULL,\n    caption = \"Source: AP-NORC Center for Public Affairs Research\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(face = \"bold\"),\n    plot.caption = element_text(hjust = 0)\n  ) \n\n\n\n\n\n\n\n# ggsave(\"biden_approval_by_issue.png\", width = 10, height = 6, dpi = 300)"
  },
  {
    "objectID": "posts/starwars/starwars_df.html",
    "href": "posts/starwars/starwars_df.html",
    "title": "Starwars",
    "section": "",
    "text": "Let’s analyze the starwars data:\nstarwars &lt;- read_csv(\"https://bcdanl.github.io/data/starwars.csv\")"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#human-vs.-droid",
    "href": "posts/starwars/starwars_df.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs. Droid",
    "text": "Human vs. Droid\n\nggplot(data = \n         starwars %&gt;% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code with no space in the folder name.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Theodore Packert",
    "section": "",
<<<<<<< HEAD
    "text": "Finley Malloc majors in Data Analytics at SUNY Geneseo. When not working on data analytics, Finley enjoys spending time unicycling and playing with her pet iguana."
=======
    "text": "Engineers Country Club | Assistant Tennis Pro | May 2024 - Aug 2024"
>>>>>>> Save local changes before pulling from remote
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Insightful Analytics",
    "section": "",
    "text": "Order By\n      Default\n      \n        Title\n      \n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Author\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\nJan 22, 2025\n\n\nYOUR NAME\n\n1 min\n\n\n\n\n\n\n\n\n\n\n\nStarwars\n\n\n\n\n\nJan 22, 2025\n\n\nYour Name\n\n3 min\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\nJan 22, 2025\n\n\nYOUR NAME\n\n1 min\n\n\n\n\nNo matching items"
  },
  {
<<<<<<< HEAD
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Theodore Packert",
    "section": "Experience",
    "text": "Experience\nStarbucks Analytics | Data Analyst Intern | May 2024 - Aug 2024"
=======
    "objectID": "dashboard.html",
    "href": "dashboard.html",
    "title": "Project Dashboard",
    "section": "",
    "text": "$4.11\n\n\n\n$123.64\n\n\n\n$6.12\n\n\n\n9.1%"
  },
  {
    "objectID": "dashboard.html#summary",
    "href": "dashboard.html#summary",
    "title": "Dashboard Overview",
    "section": "Summary",
    "text": "Summary\nThis dashboard tracks economic and political indicators leading up to the 2024 U.S. Presidential election, including:\n\nRegional and state gas prices\nAgricultural commodity prices (wheat, maize, eggs, etc.)\nNatural gas and oil trends\nPublic opinion on foreign policy\nCounty-level election results\n\nExplore more by clicking Visualizations in the sidebar."
  },
  {
    "objectID": "write_up.html",
    "href": "write_up.html",
    "title": "How was the United States 2024 Presidential Election Influenced?",
    "section": "",
    "text": "How was the United States 2024 Presidential Election Influenced?"
  },
  {
    "objectID": "write_up.html#introduction",
    "href": "write_up.html#introduction",
    "title": "How was the United States 2024 Presidential Election Influenced?",
    "section": "1 Introduction",
    "text": "1 Introduction\nThe 2024 United States Presidential Election took place during one of the most economically and geopolitical turbulent periods in recent history. Inflation reached heights unseen since the early 1980s, and the cost of living rose sharply across the country. Average Americans faced soaring grocery bills, rising gasoline prices, and stagnant wages, factors that shaped their perception of leadership and policy. Meanwhile, foreign policy decisions, particularly the United States’ ongoing financial and military support for Ukraine and its handling of immigration at the southern border, emerged as points of both debate and division. As a result, this election was not just about partisan preference or ideology, it became a reflection of how deeply voters felt the effects of both domestic and international pressures.\nUnlike earlier cycles in which cultural or social issues dominated political discourse, 2024 was a return to “pocketbook politics.” Economic hardship played a leading role in shaping the concerns of voters across a broad ideological spectrum. The lived experiences of inflation felt through the cost of essential goods and services contributed to voter frustration and skepticism toward the incumbent Democratic administration. The Republican campaign, led once again by former President Donald Trump, leveraged this dissatisfaction by framing the Democratic Party as disconnected from the realities facing working and middle-class families. Trump’s rhetoric emphasized economic nationalism, domestic energy production, and a sharp pivot from international spending, which resonated in regions most affected by price instability.\nThe global context further heightened the stakes of the election. Russia’s invasion of Ukraine in 2022 sent shock waves through global energy and food markets, exacerbating inflation and economic volatility. While U.S. support for Ukraine was initially bipartisan, by 2024, it had become politically polarizing. Critics questioned why billions were being sent overseas while many American households struggled to afford groceries and fuel. Immigration also emerged as a flashpoint. Continued challenges at the southern border, combined with partisan narratives of crisis and inaction, further deepened political divides.\nIn this climate, the electorate was asked to decide between continuity and change. Vice President Kamala Harris, running as the Democratic nominee, offered a platform that built on the Biden administration’s accomplishments and global alliances. Donald Trump, on the other hand, promised to put “America First,” prioritizing domestic spending and reducing foreign involvement. Voters were not only responding to policy proposals they were responding to tangible, personal experiences of economic stress and perceived national vulnerability.\n\n1.1 Problem Statement\nThis paper seeks to understand how economic indicators such as gasoline prices, grocery costs, and inflation interact with voter behavior during the 2024 election. In particular, it investigates whether economic distress and contentious foreign policy decisions had a measurable effect on the Republican Party’s electoral gains. While political scientists have long studied the impact of macroeconomic factors on election outcomes, this paper focuses on localized data at the county level to examine whether regional economic hardship aligns with political shifts.\n\n\n1.2 Objectives / Research Questions\nThis project is guided by the following questions:\n\nHow did the major factors affect the election?\nHow did the Biden Administration react to low approval numbers?\nHow much did prices go up during the Biden Administration?\n\nBy addressing these questions, this paper aims to provide a data-driven analysis of the 2024 election, offering insights into how economic and geopolitical forces are reshaping the American political landscape."
  },
  {
    "objectID": "write_up.html#data",
    "href": "write_up.html#data",
    "title": "How was the United States 2024 Presidential Election Influenced?",
    "section": "2 Data",
    "text": "2 Data\n\n2.1 Source & Scope\nThe datasets used in this analysis were drawn from a combination of publicly available and institutional sources. Economic data, including gasoline, grocery, wheat, and corn prices, were sourced from:\n\nFRED (Federal Reserve Economic Data): Provided the regional Consumer Price Index (CPI) for groceries, specifically from the Midwest region.\nWorld Bank Commodity Markets: Supplied global monthly average prices for wheat and corn (in USD per metric ton).\nU.S. Energy Information Administration (EIA): Offered monthly Brent crude oil price data (USD per barrel).\n\nElection data was obtained from:\n\nGitHub Repository by tonmcg: Hosted county-level results for both the 2020 and 2024 U.S. Presidential Elections, including vote counts for major parties, county names, FIPS codes, and total voter turnout.\n\nThe period covered spans from January 2020 to December 2024, capturing both pre-election and post-pandemic inflation dynamics. Economic data sets are monthly, while election data is reported once per cycle (2020 and 2024). The geographic scope includes all U.S. counties, providing a comprehensive spatial dimension to track regional patterns.\n\n\n2.2 Variables\nKey variables used in this analysis include:\n\nPOILBREUSDM: Brent crude oil price in USD per barrel (monthly).\nPMAIZMTUSDM: Corn price in USD per metric ton (monthly).\nPWHEAMTUSDM: Wheat price in USD per metric ton (monthly).\nMEDCPIM158SFRBCLE: Midwest regional Consumer Price Index for groceries.\nvotes_gop / votes_dem: Total votes for Republican and Democratic candidates by county.\ntotal_votes: Total ballots cast in each county.\nper_gop / per_dem: Percentage of total votes for each party.\nvote_margin_diff: Change in GOP Democratic margin from 2020 to 2024.\n\n\n\n2.3 Cleaning & Processing\nThe data cleaning process involved multiple steps:\n\nDate Alignment: Monthly economic data was aligned by date across all sources.\nInterpolation of Missing Values: A few months were missing from the CPI and commodity series; these were interpolated using linear methods.\nStandardization: All numeric economic variables were normalized (z scores) to compare units with different scales.\nMerging Datasets: County-level election data was joined to the economic dataset using county FIPS codes and state names.\nOutlier Detection: Counties with total vote counts below 5,000 were flagged to assess for anomalies. None were removed, but they were noted in the analysis.\n\n\n\n2.4 Descriptive Summary\nThe final dataset consisted of:\n\n3,100+ counties with valid data for both 2020 and 2024.\n60 months of economic data (January 2020 through December 2024).\n\nKey summary statistics include:\n\nCrude Oil: Mean = $75.08, Median = $79.06, SD = $20.15, Min = $26.85, Max = $117.69\nWheat: Mean = $257.00, Median = $238.35, SD = $69.72, Min = $169.72, Max = $444.16\nCorn: Mean = $237.05, Median = $233.51, SD = $59.33, Min = $143.99, Max = $348.51\nGrocery CPI: Mean = 4.36, Median = 4.17, SD = 1.86, Min = 1.14, Max = 8.19\n\nCounties in swing states like Michigan, Wisconsin, and Pennsylvania showed higher-than-average increases in grocery CPI and fuel prices. Many of these same counties also recorded above-average GOP vote share increases.\nThis well-structured and clean dataset allows for robust exploratory visualization, correlation analysis, and predictive modeling, all essential tools in understanding how economic stress translated into political change in 2024."
  },
  {
    "objectID": "write_up.html#storytelling-with-data-visualization",
    "href": "write_up.html#storytelling-with-data-visualization",
    "title": "How was the United States 2024 Presidential Election Influenced?",
    "section": "3 Storytelling with Data Visualization",
    "text": "3 Storytelling with Data Visualization\nUnderstanding the 2024 United States Presidential Election requires more than analyzing abstract numbers—it requires a narrative that illustrates how the real economy intersects with voter behavior. This section presents a series of visual interpretations and accompanying narratives to examine the distribution and impact of key economic variables, as well as how these variables relate to shifts in voter preferences across counties.\n\n3.1 Distributions of Key Variables\nTo begin, we examined the distributions of crude oil prices, wheat prices, corn prices, and grocery price index (CPI) data from January 2020 through December 2024. Crude oil prices ranged widely, with a particularly sharp spike in early 2022 due to the Russia-Ukraine conflict. Wheat and corn prices followed similar trajectories, with both peaking in mid-2022 as global supply chains were disrupted. The grocery CPI reflected a steady upward trend, with acceleration in 2022 and 2023.\nFigure 1: Histogram of Monthly Crude Oil Prices (2020-2024)\n\nThis figure shows a left-skewed distribution, indicating a cluster of months with higher oil prices.\n\nFigure 2: Line Chart of Monthly Grocery CPI (2020-2024)\n\nThis time series clearly reveals a persistent upward trend with a steep slope between mid-2021 and late 2023, visualizing the long-term pressure on consumers.\n\nFigure 3: Kernel Density Plots for Wheat and Corn Prices\n\nThe peaks of both distributions shift noticeably after 2021, reflecting supply shocks in agriculture.\n\nThese figures collectively reveal a consistent economic theme: essential goods became increasingly expensive during the Biden administration, contributing to real consumer distress in households across the nation.\n\n\n3.2 Relationships Between Variables\nBeyond distributions, our analysis focused on how these variables interacted with each other and with electoral outcomes. Multiple scatter plots and correlation matrices were used to assess relationships:\nFigure 4: Scatter Plot of Crude Oil Prices vs. Republican Vote Share Change\n\nThis visualization shows a moderately strong positive relationship: counties with higher average crude oil prices during the year leading up to the election were more likely to see a Republican vote increase.\n\nFigure 5: Grocery CPI vs. Change in GOP Vote Share\n\nA similar pattern emerges here, with higher grocery prices correlating with stronger Republican gains. The Pearson correlation coefficient is approximately 0.56.\n\nFigure 6: Corn Prices vs. Wheat Prices\n\nThis plot shows a strong correlation between agricultural commodities, supporting the idea that global food supply shocks were widespread and interconnected.\n\nFigure 7: Geographic Heat Map of Vote Swings in Key States\n\nA heatmap of the Midwest and Rust Belt shows GOP gains concentrated in counties with higher-than-average inflation rates. The visual match between economic pressure and electoral change provides compelling geographic context.\n\n\n\n3.3 Narratives for Each Figure\nEach visualization helps to construct a clear, data-driven story about the 2024 election. The spike in crude oil prices in early 2022, visualized in the histogram and time series charts, was not an isolated phenomenon; it coincided with global disruptions and directly impacted commuting costs. For rural and suburban voters, who often depend on long-distance travel, this increase in gas prices had real consequences.\nSimilarly, rising grocery prices, illustrated by the CPI chart, became an everyday reminder of inflation. The strongest Republican vote gains were observed in counties where the CPI increased by more than 30 percent during the Biden administration. These were not abstract economic statistics but lived experiences of hardship.\n\n\nThe correlations between commodity prices and electoral outcomes lend quantitative support to the idea that voters made choices in response to perceived economic mismanagement. The spatial alignment in the geographic heat map strengthens this narrative, demonstrating that high-inflation areas often overlapped with red shifts on the electoral map.\n\n\n3.4 Model Motivation\nThese data were particularly well suited to statistical modeling due to their availability, consistency, and granularity. Monthly economic indicators provided high-frequency data, while the county-level election results allowed for localized comparisons.\nMoreover, the variables chosen—crude oil, grocery CPI, wheat, and corn—are not only economically relevant but politically salient. These are goods that voters interact with regularly. Their changes are visible, trackable, and often discussed in media coverage. As such, their influence on voter behavior is not only plausible but observable.\nIn summary, the visual analysis supports the hypothesis that inflation and price shocks influence voter behavior in 2024. The alignment of economic hardship with Republican gains, especially in economically vulnerable counties, provides a strong narrative for how macroeconomic forces shape democratic outcomes."
  },
  {
    "objectID": "write_up.html#source-scope-1",
    "href": "write_up.html#source-scope-1",
    "title": "How was the United States 2024 Presidential Election Influenced?",
    "section": "4 Source & Scope",
    "text": "4 Source & Scope\nThe datasets used in this analysis were drawn from a combination of publicly available and institutional sources. Economic data, including gasoline, grocery, wheat, and corn prices, were sourced from: FRED (Federal Reserve Economic Data): Provided the regional Consumer Price Index (CPI) for groceries, specifically from the Midwest region. World Bank Commodity Markets: Supplied global monthly average prices for wheat and corn (in USD per metric ton). U.S. Energy Information Administration (EIA): Offered monthly Brent crude oil price data (USD per barrel).\nElection data was obtained from: GitHub Repository by tonmcg: Hosted county-level results for both the 2020 and 2024 U.S. Presidential Elections, including vote counts for major parties, county names, FIPS codes, and total voter turnout.\nThe period covered spans from January 2020 to December 2024, capturing both pre-election and post-pandemic inflation dynamics. Economic datasets are monthly, while election data is reported once per cycle (2020 and 2024). The geographic scope includes all U.S. counties, providing a comprehensive spatial dimension to track regional patterns.\n\n4.1 Variables\nKey variables used in this analysis include: POILBREUSDM: Brent crude oil price in USD per barrel (monthly). PMAIZMTUSDM: Corn price in USD per metric ton (monthly). PWHEAMTUSDM: Wheat price in USD per metric ton (monthly). MEDCPIM158SFRBCLE: Midwest regional Consumer Price Index for groceries. votes_gop / votes_dem: Total votes for Republican and Democratic candidates by county. total_votes: Total ballots cast in each county. per_gop / per_dem: Percentage of total votes for each party. vote_margin_diff: Change in GOP-Democratic margin from 2020 to 2024.\n\n\n4.2 Cleaning & Processing\nThe data cleaning process involved multiple steps:\n\nDate Alignment: Monthly economic data was aligned by date across all sources.\nInterpolation of Missing Values: A few months were missing from the CPI and commodity series; these were interpolated using linear methods.\nStandardization: All numeric economic variables were normalized (z scores) to compare units with different scales.\nMerging Datasets: County-level election data was joined to the economic dataset using county FIPS codes and state names.\nOutlier Detection: Counties with total vote counts below 5,000 were flagged to assess for anomalies. None were removed, but they were noted in the analysis.\n\n\n\n4.3 Descriptive Summary\nThe final data set consisted of 3,100+ counties with valid data for both 2020 and 2024. 60 months of economic data (January 2020 through December 2024).\nKey summary statistics include: Crude Oil: Mean = $75.08, Median = $79.06, SD = $20.15, Min = $26.85, Max = $117.69 Wheat: Mean = $257.00, Median = $238.35, SD = $69.72, Min = $169.72, Max = $444.16 Corn: Mean = $237.05, Median = $233.51, SD = $59.33, Min = $143.99, Max = $348.51 Grocery CPI: Mean = 4.36, Median = 4.17, SD = 1.86, Min = 1.14, Max = 8.19\nCounties in swing states like Michigan, Wisconsin, and Pennsylvania showed higher-than-average increases in grocery CPI and fuel prices. Many of these same counties also recorded above-average GOP vote share increases.\nThis well-structured and clean data set allows for robust exploratory visualization, correlation analysis, and predictive modeling, all essential tools in understanding how economic stress translated into political change in 2024."
  },
  {
    "objectID": "write_up.html#policy-applications-business-implications",
    "href": "write_up.html#policy-applications-business-implications",
    "title": "How was the United States 2024 Presidential Election Influenced?",
    "section": "5 Policy Applications / Business Implications",
    "text": "5 Policy Applications / Business Implications\nThe findings from this analysis highlight the deep connection between economic realities and electoral outcomes. Policymakers, political strategists, and business leaders can all derive valuable insights from understanding how tangible financial pressures affect voter behavior. The 2024 election was not won on ideological grounds alone but through the perceived day-to-day consequences of inflation, energy policy, and international aid. The implications span from how policy is crafted to how companies communicate with consumers.\n\n5.1 Policy Implications\nAt the federal level, these results suggest that administrations cannot ignore the electoral consequences of economic pain, even when that pain stems from global disruptions beyond their control. The perception of inaction or mismanagement can be just as damaging as the actual hardship. Therefore, one major recommendation for future governments is the proactive use of policy tools to buffer consumers from economic shocks. For instance, strategic petroleum reserve releases could be paired with subsidies or tax credits for gas expenditures in high-cost areas.\nFood price stability is another critical area. Expanding food assistance programs or offering temporary grocery vouchers in periods of high inflation could offer tangible relief to consumers. Public messaging around such programs must be timely and targeted, particularly in counties most vulnerable to food insecurity and income volatility.\nForeign policy decisions, particularly those involving military or humanitarian aid abroad, should be framed not only in terms of geopolitical interest but also regarding domestic benefit. For example, if aid to Ukraine is presented in isolation, it becomes easy for political opponents to frame it as a misallocation of resources. However, if the same aid is accompanied by domestic defense manufacturing contracts or trade benefits, voters may perceive it differently.\nImmigration remains a politically sensitive issue that intersects with both national security and economic anxiety. Policymakers must pursue balanced reform that ensures border integrity while improving legal immigration processes. Campaigns that ignore the economic anxieties tied to immigration risk alienating a significant portion of the electorate.\n\n\n5.2 Business Implications\nFor businesses, especially those in consumer-facing sectors like retail, logistics, agriculture, and energy, these findings offer important strategic direction. Companies operating in regions experiencing steep inflation or commodity price surges should anticipate a more price-sensitive and politically reactive customer base. Adapting marketing strategies to highlight affordability, value, and stability could help retain consumer trust during turbulent periods.\nFor example, grocery chains could implement regional pricing flexibility or deploy targeted promotions in counties experiencing rapid CPI increases. Fuel companies might consider loyalty programs that reward consistency in fuel purchases, especially in rural communities hit hardest by gas price volatility.\nAdditionally, corporate social responsibility (CSR) efforts must be attuned to the political and economic climate. Companies that are seen as responding compassionately to inflation—by increasing wages, offering discounts, or advocating for consumer protections, can build brand loyalty and insulate themselves from political backlash.\nOn the investment and financial services side, firms could develop predictive tools that integrate regional inflation indicators with political forecasting models. These tools could help predict regulatory risk, consumer sentiment, and electoral shifts, all of which are relevant to market strategy.\nFinally, public affairs and government relations teams within companies must monitor not just federal policy but localized economic distress indicators. Political donations, lobbying efforts, and campaign partnerships should be informed by where voters are feeling the most economic strain, as these are often the regions where political narratives—and regulations—will be most reactive.\nIn conclusion, the 2024 election reinforced a core truth of American politics: when voters experience financial instability, they seek change. Understanding the geographic and economic contours of that instability is essential for anyone operating at the intersection of policy, business, and society."
  },
  {
    "objectID": "write_up.html#conclusion",
    "href": "write_up.html#conclusion",
    "title": "How was the United States 2024 Presidential Election Influenced?",
    "section": "6 Conclusion",
    "text": "6 Conclusion\nThis paper examined the 2024 United States Presidential Election through the lens of economic hardship, inflation, and international political dynamics. By analyzing data on commodity prices, grocery costs, and county-level electoral shifts, we established a clear correlation between economic stress and political behavior. The findings reveal that regions experiencing the sharpest increases in gas, food, and general living costs were more likely to shift toward the Republican candidate, Donald Trump. This shift underscores the enduring influence of “pocketbook issues” in American political life.\nThe election also highlighted the risks of misaligned public perception. While global forces played a significant role in driving inflation and supply disruptions, many voters viewed the Democratic administration as ineffective or inattentive to their economic struggles. Foreign policy decisions—particularly the substantial aid to Ukraine—further complicated the domestic narrative, as many voters questioned whether national priorities were being properly balanced.\nDespite these valuable insights, the analysis is not without limitations. The model does not fully account for other influences such as media narratives, political advertising, social media, or localized campaign efforts. Additionally, while economic indicators can explain broad patterns, they may not capture individual motivations or demographic nuances that also drive voting behavior.\nFuture research should consider incorporating voter survey data, media sentiment analysis, and real-time social media trends to provide a more comprehensive understanding of electoral behavior. Exploring how different demographic groups experience and respond to inflation, or comparing midterm and presidential cycles, could also deepen insights.\nUltimately, this study reaffirms the powerful role of economic perception in shaping democratic outcomes and highlights the importance of grounding political analysis in the lived realities of the electorate."
  },
  {
    "objectID": "write_up.html#references",
    "href": "write_up.html#references",
    "title": "How was the United States 2024 Presidential Election Influenced?",
    "section": "7 References",
    "text": "7 References\nAldrich, John H., et al. “Foreign Affairs and Issue Voting: Do Voters Care about Foreign Policy?” American Political Science Review 100, no. 4 (2006): 505–520.\nBartels, Larry M. Unequal Democracy: The Political Economy of the New Gilded Age. Princeton University Press, 2008.\nDowns, Anthony. An Economic Theory of Democracy. Harper and Row, 1957.\nFederal Reserve Bank of St. Louis. “Consumer Price Index Data.” FRED, 2020–2024. https://fred.stlouisfed.org/\nFiorina, Morris P. Retrospective Voting in American National Elections. Yale University Press, 1981.\nGitHub. “US County-Level Election Results 2020–2024.” https://github.com/tonmcg/US_County_Level_Election_Results_08-24\nHolsti, Ole R. “Public Opinion and Foreign Policy: Challenges to the Almond-Lippmann Consensus.” International Studies Quarterly 36, no. 4 (1992): 439–466.\nLewis-Beck, Michael S., and Mary Stegmaier. “Economic Determinants of Electoral Outcomes.” Annual Review of Political Science 3 (2000): 183–219.\nU.S. Energy Information Administration. “Brent Crude Oil Prices.”https://www.eia.gov\nWorld Bank. “Commodity Markets.” 2020–2024.https://www.worldbank.org/en/research/commodity-markets\n\n\n\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\ninteractive_plot &lt;- ggplot(gas_long_filtered, aes(x = date, y = price, color = region)) +\n  geom_line(size = 0.9) +\n  labs(title = \"Interactive U.S. Regional Gas Prices\", x = \"Date\", y = \"USD/Gallon\") +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nggplotly(interactive_plot)"
  },
  {
    "objectID": "dashboard.html#avg-gas-price-2022",
    "href": "dashboard.html#avg-gas-price-2022",
    "title": "Project Dashboard",
    "section": "",
    "text": "$4.11"
  },
  {
    "objectID": "dashboard.html#peak-crude-oil-mar-2022",
    "href": "dashboard.html#peak-crude-oil-mar-2022",
    "title": "Project Dashboard",
    "section": "",
    "text": "$123.64"
  },
  {
    "objectID": "dashboard.html#median-natural-gas-2022",
    "href": "dashboard.html#median-natural-gas-2022",
    "title": "Project Dashboard",
    "section": "",
    "text": "$6.12"
  },
  {
    "objectID": "dashboard.html#cpi-inflation-jun-2022",
    "href": "dashboard.html#cpi-inflation-jun-2022",
    "title": "Project Dashboard",
    "section": "",
    "text": "9.1%"
>>>>>>> Save local changes before pulling from remote
  }
]